---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.{{ ansible_architecture }}.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service
    - name: Fire up clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: started
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0


- name: Install Vector
  hosts: vector
  handlers:
    - name: Restart vector service
      become: true
      ansible.builtin.command: "pkill --signal SIGHUP vector"
  tasks:
    - name: Get vector distrib
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-{{ ansible_architecture }}-unknown-linux-musl.tar.gz"
        dest: "/home/{{ hostvars[inventory_hostname].ansible_user }}/vector-{{ vector_version }}-{{ ansible_architecture }}-unknown-linux-musl.tar.gz"
    - name: Extract vector archive
      ansible.builtin.unarchive:
        src: "/home/{{ hostvars[inventory_hostname].ansible_user }}/vector-{{ vector_version }}-{{ ansible_architecture }}-unknown-linux-musl.tar.gz"
        dest: "/home/{{ hostvars[inventory_hostname].ansible_user }}"
        remote_src: true
    - name: Copy vector files to vector_path
      become: true
      ansible.builtin.copy:
        src: "/home/{{ hostvars[inventory_hostname].ansible_user }}/vector-{{ ansible_architecture }}-unknown-linux-musl/"
        dest: "{{ vector_path }}/"
        remote_src: true
    - name: Create vector data dir
      become: true
      ansible.builtin.file:
        path: "{{ vector_data_dir }}"
        state: directory
        mode: '0777'
    - name: Generate vector config file
      become: true
      ansible.builtin.template:
        src: "./templates/vector/config.j2"
        dest: "{{ vector_path }}/config/vector.yaml"
        owner: root
        group: root
        mode: '0644'
      notify: Restart vector service
    - name: Start vector service
      become: true
      ansible.builtin.shell: "{{ vector_path }}/bin/vector --config {{ vector_path }}/config/vector.yaml >/dev/null 2>&1 &"
      tags: Run vector
