apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: atlantis
  namespace: atlantis
spec:
  serviceName: atlantis
  replicas: 1
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: atlantis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: atlantis
    spec:
      securityContext:
        fsGroup: 1000
      containers:
      - name: atlantis
        image: cr.yandex/crpjp4ujjlrt73g1f32k/atlantis:v0.26.0-ya
        env:
        - name: ATLANTIS_REPO_ALLOWLIST
          value: github.com/nikmokrov/ya-infra

        ### GitHub Config ###
        - name: ATLANTIS_GH_USER
          value: nikmokrov
        - name: ATLANTIS_GH_TOKEN
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: token
        - name: ATLANTIS_GH_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: webhook-secret
        ### End GitHub Config ###

        - name: ATLANTIS_DATA_DIR
          value: /atlantis
        - name: ATLANTIS_PORT
          value: "4141"
        - name: TF_VAR_YC_SA_KEY
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: key.json
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: access_key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: secret_key
        - name: ATLANTIS_REPO_CONFIG
          value: "/home/atlantis/repos.yml"
        volumeMounts:
        - name: atlantis-data
          mountPath: /atlantis
        ports:
        - name: atlantis
          containerPort: 4141
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 256Mi
            cpu: 100m
        livenessProbe:
          periodSeconds: 60
          httpGet:
            path: /healthz
            port: 4141
            scheme: HTTP
        readinessProbe:
          periodSeconds: 60
          httpGet:
            path: /healthz
            port: 4141
            scheme: HTTP
  volumeClaimTemplates:
  - metadata:
      name: atlantis-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: atlantis-svc
  namespace: atlantis
spec:
  # type: LoadBalancer
  ports:
  - name: atlantis-port
    port: 80
    targetPort: 4141
  selector:
    app.kubernetes.io/name: atlantis
