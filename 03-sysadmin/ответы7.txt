1. Список доступных сетевых интерфейсов проверяется
в Linux
vagrant@vagrant:~$ ip -br link
lo               UNKNOWN        00:00:00:00:00:00 <LOOPBACK,UP,LOWER_UP> 
eth0             UP             08:00:27:a2:6b:fd <BROADCAST,MULTICAST,UP,LOWER_UP> 

в Windows
C:\Users\test>netsh interface ipv4 show interfaces

Инд     Мет         MTU          Состояние               Имя
---  ----------  ----------  ------------  ---------------------------
  1          75  4294967295  connected     Loopback Pseudo-Interface 1
  5          25        1500  connected     Ethernet

или

C:\Users\test>ipconfig /all

Настройка протокола IP для Windows

   Имя компьютера  . . . . . . . . . : DESKTOP-CRCTJ3G
   Основной DNS-суффикс  . . . . . . :
   Тип узла. . . . . . . . . . . . . : Гибридный
   IP-маршрутизация включена . . . . : Нет
   WINS-прокси включен . . . . . . . : Нет

Адаптер Ethernet Ethernet:

   DNS-суффикс подключения . . . . . :
   Описание. . . . . . . . . . . . . : Intel(R) PRO/1000 MT Desktop Adapter
   Физический адрес. . . . . . . . . : 08-00-27-11-00-E0
   DHCP включен. . . . . . . . . . . : Да
   Автонастройка включена. . . . . . : Да
   Локальный IPv6-адрес канала . . . : fe80::64b5:2330:36be:f68b%5(Основной)
   IPv4-адрес. . . . . . . . . . . . : 10.0.2.15(Основной)
   Маска подсети . . . . . . . . . . : 255.255.255.0
   Аренда получена. . . . . . . . . . : 15 сентября 2022 г. 20:09:57
   Срок аренды истекает. . . . . . . . . . : 16 сентября 2022 г. 20:09:58
   Основной шлюз. . . . . . . . . : 10.0.2.2
   DHCP-сервер. . . . . . . . . . . : 10.0.2.2
   IAID DHCPv6 . . . . . . . . . . . : 101187623
   DUID клиента DHCPv6 . . . . . . . : 00-01-00-01-2A-B5-12-16-08-00-27-11-00-E0
   DNS-серверы. . . . . . . . . . . : 192.168.119.1
   NetBios через TCP/IP. . . . . . . . : Включен
  
  
2. Link Layer Discovery Protocol (LLDP) — протокол канального уровня, позволяющий сетевому оборудованию оповещать оборудование, работающее в локальной сети, о своём существовании и передавать ему свои характеристики.
В Linux пакет называется lldpd. Устанавливается командой apt install lldpd (Debian/Ubuntu) или yum install lldpd (RHEL/CentOS). В современных дистрибутивах с systemd служба (демон) включается комадами systemctl enable lldpd && systemctl start lldpd.
Управляется служба утилитой lldpctl (lldpcli). Отличаются вызовы тем, что по второму имени утилита запускается по-умолчанию в интерактивном режиме.

vagrant@alpha:~$ lldpcli
[lldpcli] $ show neighbors 
-------------------------------------------------------------------------------
LLDP neighbors:
-------------------------------------------------------------------------------
Interface:    eth1, via: LLDP, RID: 1, Time: 0 day, 00:00:28
  Chassis:     
    ChassisID:    mac 08:00:27:a2:6b:fd
    SysName:      beta
    SysDescr:     Ubuntu 20.04.4 LTS Linux 5.4.0-110-generic #124-Ubuntu SMP Thu Apr 14 19:46:19 UTC 2022 x86_64
    MgmtIP:       10.0.2.15
    MgmtIP:       fe80::a00:27ff:fea2:6bfd
    Capability:   Bridge, off
    Capability:   Router, off
    Capability:   Wlan, off
    Capability:   Station, on
  Port:        
    PortID:       mac 08:00:27:31:4a:ad
    PortDescr:    eth1
    TTL:          120
-------------------------------------------------------------------------------
[lldpcli] $ show interfaces 
-------------------------------------------------------------------------------
LLDP interfaces:
-------------------------------------------------------------------------------
Interface:    eth0, via: unknown, Time: 0 day, 00:01:12
  Chassis:     
    ChassisID:    mac 08:00:27:a2:6b:fd
    SysName:      alpha
    SysDescr:     Ubuntu 20.04.4 LTS Linux 5.4.0-110-generic #124-Ubuntu SMP Thu Apr 14 19:46:19 UTC 2022 x86_64
    MgmtIP:       10.0.2.15
    MgmtIP:       fe80::a00:27ff:fea2:6bfd
    Capability:   Bridge, off
    Capability:   Router, off
    Capability:   Wlan, off
    Capability:   Station, on
  Port:        
    PortID:       mac 08:00:27:a2:6b:fd
    PortDescr:    eth0
  TTL:          120
-------------------------------------------------------------------------------
Interface:    eth1, via: LLDP, Time: 0 day, 00:01:12
  Chassis:     
    ChassisID:    mac 08:00:27:a2:6b:fd
    SysName:      alpha
    SysDescr:     Ubuntu 20.04.4 LTS Linux 5.4.0-110-generic #124-Ubuntu SMP Thu Apr 14 19:46:19 UTC 2022 x86_64
    MgmtIP:       10.0.2.15
    MgmtIP:       fe80::a00:27ff:fea2:6bfd
    Capability:   Bridge, off
    Capability:   Router, off
    Capability:   Wlan, off
    Capability:   Station, on
  Port:        
    PortID:       mac 08:00:27:e3:eb:8a
    PortDescr:    eth1
  TTL:          120
-------------------------------------------------------------------------------
[lldpcli] $ show statistics 
-------------------------------------------------------------------------------
LLDP statistics:
-------------------------------------------------------------------------------
Interface:    eth0
  Transmitted:  3
  Received:     0
  Discarded:    0
  Unrecognized: 0
  Ageout:       0
  Inserted:     0
  Deleted:      0
-------------------------------------------------------------------------------
Interface:    eth1
  Transmitted:  3
  Received:     2
  Discarded:    0
  Unrecognized: 0
  Ageout:       0
  Inserted:     1
  Deleted:      0
-------------------------------------------------------------------------------

3. Для разделения коммутатора на несколько виртуальных сетей используется технолония VLAN - виртуальная локальная компьютерная сеть. 
Linux поддерживает VLAN "из коробки", нужно только загрузить модуль ядра 8021q (modprobe 8021q). Настроить VLAN можно разными способами (subinterface, отдельный файл vlanX, iproute2, NetworkManager или vconfig). Утилита vconfig, например, устанавливается командами apt install vlan (Debian/Ubuntu) или yum install vconfig (RHEL/CentOS).
Пример настройки через vconfig:
root@alpha:~# vconfig add eth1 10
Создается виртуальный интерфейс eth1.10 на базе физического eth1 - член VLAN 10.
vconfig считается устаревшей, рекомендуется использовать ipconfig2:
root@alpha:~# ip link add link eth1 name eth1.10 type vlan id 10
Далее eth1.10 можно присвоить IP обычным способом:
root@alpha:~# ip addr add 10.0.0.1/24 dev eth1.10
и поднять (включить):
root@alpha:~# ip link set up eth1.10

Вышеприведенный пример настройки временный, работает только до перезагрузки хоста. Для постоянной настройки нужно, например, отредактировать /etc/network/interfaces следующим образом:
auto eth1.10
iface eth1.10 inet static
    address 10.0.0.1
    netmask 255.255.255.0
    vlan-raw-device eth1

4. Агрегация (объединение) сетевых интерфейсов в Linux называется Bonding. Это механизм, позволяющий объединить несколько физических сетевых интерфейсов в один виртуальный для увеличения пропускной способности и(или) обеспечения отказоустройчивости.

В Linux поддерживаются следующие типы агрегации:

Mode-0(balance-rr) – режим по-умолчанию. Mode-0 обеспечивает балансировку нагрузки и отказоустойчивость. В данном режиме сетевые пакеты отправляются “по кругу”, от первого интерфейса к последнему. Если какие-то интерфейсы выходят из строя, пакеты отправляются на оставшиеся.

Mode-1(active-backup) – один из интерфейсов активен, остальные - в ожидающем режиме. При возникновении проблемы в активном интерфейсе производится переключение на один из ожидающих интерфейсов.

Mode-2(balance-xor) – режим обеспечивает балансировку нагрузки и отказоустойчивость. Передача пакетов распределяется по типу входящего и исходящего трафика в зависимости от MAC-адресов источника и получателя. Используется формула ((MAC источника) XOR (MAC получателя)) % количество интерфейсов.

Mode-3(broadcast) – передача происходит во все объединенные интерфейсы, тем самым обеспечивая отказоустойчивость. Рекомендуется только для multicast трафика.

Mode-4(802.3ad) – динамическое объединение. Для данного режима требуется специально настраивать коммутатор, к которому подключен объединенный интерфейс, но в результате можно значительно увеличить пропускную способность входящего и исходящего трафика. 

Mode-5(balance-tlb) – адаптивная балансировки нагрузки трафика при передаче. Входящий трафик получается только активным интерфейсом, а исходящий распределяется в зависимости от текущей загрузки канала каждого интерфейса.

Mode-6(balance-alb) – адаптивная балансировка нагрузки как при приеме так и при передаче. Отличается более совершенным алгоритмом балансировки нагрузки, чем Mode-5.

Для настройки bonding нужно установить пакет ifenslave и включить модуль ядра bonding.

Пример настройки через /etc/network/interfaces:

auto bond0 eth0 eth1
iface bond0 inet static
        address 10.0.0.1
        netmask 255.255.255.0
        gateway 10.0.0.254
        bond-slaves eth0 eth1 # объединяемые интерфейсы
        bond-mode balance-alb # тип агрегации
        bond-miimon 100       # интервал проверки линии в миллисекундах
        bond-downdelay 200    # задержка перед отключением интерфейса после обнаружения обрыва соединения в миллисекундах
        bond-updelay 200      # задержка перед включением интерфейса после обнаружения восстановления соединения в миллисекундах
        
5. 
vagrant@vagrant:~$ ipcalc 192.168.1.0/29
Address:   192.168.1.0          11000000.10101000.00000001.00000 000
Netmask:   255.255.255.248 = 29 11111111.11111111.11111111.11111 000
Wildcard:  0.0.0.7              00000000.00000000.00000000.00000 111
=>
Network:   192.168.1.0/29       11000000.10101000.00000001.00000 000
HostMin:   192.168.1.1          11000000.10101000.00000001.00000 001
HostMax:   192.168.1.6          11000000.10101000.00000001.00000 110
Broadcast: 192.168.1.7          11000000.10101000.00000001.00000 111
Hosts/Net: 6                     Class C, Private Internet

В сети /29 6 ip адресов

vagrant@vagrant:~$ ipcalc 10.10.10.0/24 /29                 
Address:   10.10.10.0           00001010.00001010.00001010. 00000000
Netmask:   255.255.255.0 = 24   11111111.11111111.11111111. 00000000
Wildcard:  0.0.0.255            00000000.00000000.00000000. 11111111
=>
Network:   10.10.10.0/24        00001010.00001010.00001010. 00000000
HostMin:   10.10.10.1           00001010.00001010.00001010. 00000001
HostMax:   10.10.10.254         00001010.00001010.00001010. 11111110
Broadcast: 10.10.10.255         00001010.00001010.00001010. 11111111
Hosts/Net: 254                   Class A, Private Internet

Subnets after transition from /24 to /29

Netmask:   255.255.255.248 = 29 11111111.11111111.11111111.11111 000
Wildcard:  0.0.0.7              00000000.00000000.00000000.00000 111

 1.
Network:   10.10.10.0/29        00001010.00001010.00001010.00000 000
HostMin:   10.10.10.1           00001010.00001010.00001010.00000 001
HostMax:   10.10.10.6           00001010.00001010.00001010.00000 110
Broadcast: 10.10.10.7           00001010.00001010.00001010.00000 111
Hosts/Net: 6                     Class A, Private Internet

 2.
Network:   10.10.10.8/29        00001010.00001010.00001010.00001 000
HostMin:   10.10.10.9           00001010.00001010.00001010.00001 001
HostMax:   10.10.10.14          00001010.00001010.00001010.00001 110
Broadcast: 10.10.10.15          00001010.00001010.00001010.00001 111
Hosts/Net: 6                     Class A, Private Internet

...

 32.
Network:   10.10.10.248/29      00001010.00001010.00001010.11111 000
HostMin:   10.10.10.249         00001010.00001010.00001010.11111 001
HostMax:   10.10.10.254         00001010.00001010.00001010.11111 110
Broadcast: 10.10.10.255         00001010.00001010.00001010.11111 111
Hosts/Net: 6                     Class A, Private Internet

Subnets:   32
Hosts:     192

В сети /24 32 подсети /29. ipcalc показывает примеры подсетей.

6. Для организации стыка согласно RFC 6598 можно взять сеть из диапазона 100.64.0.0 — 100.127.255.255 CGN (Carrier-Grade NAT). Например:

vagrant@vagrant:~$ ipcalc -s 50 100.64.1.0/24
Address:   100.64.1.0           01100100.01000000.00000001. 00000000
Netmask:   255.255.255.0 = 24   11111111.11111111.11111111. 00000000
Wildcard:  0.0.0.255            00000000.00000000.00000000. 11111111
=>
Network:   100.64.1.0/24        01100100.01000000.00000001. 00000000
HostMin:   100.64.1.1           01100100.01000000.00000001. 00000001
HostMax:   100.64.1.254         01100100.01000000.00000001. 11111110
Broadcast: 100.64.1.255         01100100.01000000.00000001. 11111111
Hosts/Net: 254                   Class A

1. Requested size: 50 hosts
Netmask:   255.255.255.192 = 26 11111111.11111111.11111111.11 000000
Network:   100.64.1.0/26        01100100.01000000.00000001.00 000000
HostMin:   100.64.1.1           01100100.01000000.00000001.00 000001
HostMax:   100.64.1.62          01100100.01000000.00000001.00 111110
Broadcast: 100.64.1.63          01100100.01000000.00000001.00 111111
Hosts/Net: 62                    Class A

Needed size:  64 addresses.
Used network: 100.64.1.0/26
Unused:
100.64.1.64/26
100.64.1.128/25

vagrant@vagrant:~$ ipcalc 100.64.1.0/27
Address:   100.64.1.0           01100100.01000000.00000001.000 00000
Netmask:   255.255.255.224 = 27 11111111.11111111.11111111.111 00000
Wildcard:  0.0.0.31             00000000.00000000.00000000.000 11111
=>
Network:   100.64.1.0/27        01100100.01000000.00000001.000 00000
HostMin:   100.64.1.1           01100100.01000000.00000001.000 00001
HostMax:   100.64.1.30          01100100.01000000.00000001.000 11110
Broadcast: 100.64.1.31          01100100.01000000.00000001.000 11111
Hosts/Net: 30                    Class A

Маска /26 дает сеть в 62 хоста, а следующая /27 - 30 хостов. По условию задачи придется взять сеть /26.

7. ARP таблицу можно проверить
в Linux:

vagrant@vagrant:~$ sudo arp
Address                  HWtype  HWaddress           Flags Mask            Iface
_gateway                 ether   52:54:00:12:35:02   C                     eth0
10.0.2.3                 ether   52:54:00:12:35:03   C                     eth0

в Windows:

C:\Windows\system32>arp -a

Интерфейс: 10.0.2.15 --- 0x5
  адрес в Интернете      Физический адрес      Тип
  10.0.2.2              52-54-00-12-35-02     динамический
  10.0.2.255            ff-ff-ff-ff-ff-ff     статический
  224.0.0.22            01-00-5e-00-00-16     статический
  224.0.0.251           01-00-5e-00-00-fb     статический
  224.0.0.252           01-00-5e-00-00-fc     статический
  239.255.255.250       01-00-5e-7f-ff-fa     статический
  255.255.255.255       ff-ff-ff-ff-ff-ff     статический

ARP кеш полностью очищается
в Linux:
vagrant@vagrant:~$ sudo ip -s neigh flush all

*** Round 1, deleting 2 entries ***
*** Flush is complete after 1 round ***

в Windows:
C:\Windows\system32>netsh interface ip delete arpcache
ОК.


C:\Windows\system32>arp -a

Интерфейс: 10.0.2.15 --- 0x5
  адрес в Интернете      Физический адрес      Тип
  10.0.2.2              52-54-00-12-35-02     динамический
  224.0.0.22            01-00-5e-00-00-16     статический
  239.255.255.250       01-00-5e-7f-ff-fa     статический

Одну запись можно удалить
в Linux:
vagrant@vagrant:~$ sudo arp -d 10.0.2.3

в Windows:
C:\Windows\system32>arp -d 10.0.2.2
